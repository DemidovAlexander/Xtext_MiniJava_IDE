/*
 * generated by Xtext 2.9.1
 */
grammar InternalMiniJava;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package demidov.projects.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package demidov.projects.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import demidov.projects.services.MiniJavaGrammarAccess;

}
@parser::members {
	private MiniJavaGrammarAccess grammarAccess;

	public void setGrammarAccess(MiniJavaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainClass
entryRuleMainClass
:
{ before(grammarAccess.getMainClassRule()); }
	 ruleMainClass
{ after(grammarAccess.getMainClassRule()); } 
	 EOF 
;

// Rule MainClass
ruleMainClass 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainClassAccess().getGroup()); }
		(rule__MainClass__Group__0)
		{ after(grammarAccess.getMainClassAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainMethod
entryRuleMainMethod
:
{ before(grammarAccess.getMainMethodRule()); }
	 ruleMainMethod
{ after(grammarAccess.getMainMethodRule()); } 
	 EOF 
;

// Rule MainMethod
ruleMainMethod 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainMethodAccess().getGroup()); }
		(rule__MainMethod__Group__0)
		{ after(grammarAccess.getMainMethodAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
		(rule__ClassDeclaration__Group__0)
		{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDeclaration
entryRuleVarDeclaration
:
{ before(grammarAccess.getVarDeclarationRule()); }
	 ruleVarDeclaration
{ after(grammarAccess.getVarDeclarationRule()); } 
	 EOF 
;

// Rule VarDeclaration
ruleVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getGroup()); }
		(rule__VarDeclaration__Group__0)
		{ after(grammarAccess.getVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodDeclaration
entryRuleMethodDeclaration
:
{ before(grammarAccess.getMethodDeclarationRule()); }
	 ruleMethodDeclaration
{ after(grammarAccess.getMethodDeclarationRule()); } 
	 EOF 
;

// Rule MethodDeclaration
ruleMethodDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getGroup()); }
		(rule__MethodDeclaration__Group__0)
		{ after(grammarAccess.getMethodDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegationOrPointExpression
entryRuleNegationOrPointExpression
:
{ before(grammarAccess.getNegationOrPointExpressionRule()); }
	 ruleNegationOrPointExpression
{ after(grammarAccess.getNegationOrPointExpressionRule()); } 
	 EOF 
;

// Rule NegationOrPointExpression
ruleNegationOrPointExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegationOrPointExpressionAccess().getAlternatives()); }
		(rule__NegationOrPointExpression__Alternatives)
		{ after(grammarAccess.getNegationOrPointExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNegation
entryRuleNegation
:
{ before(grammarAccess.getNegationRule()); }
	 ruleNegation
{ after(grammarAccess.getNegationRule()); } 
	 EOF 
;

// Rule Negation
ruleNegation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNegationAccess().getGroup()); }
		(rule__Negation__Group__0)
		{ after(grammarAccess.getNegationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePoint
entryRulePoint
:
{ before(grammarAccess.getPointRule()); }
	 rulePoint
{ after(grammarAccess.getPointRule()); } 
	 EOF 
;

// Rule Point
rulePoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointAccess().getGroup()); }
		(rule__Point__Group__0)
		{ after(grammarAccess.getPointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSquareBrackets
entryRuleSquareBrackets
:
{ before(grammarAccess.getSquareBracketsRule()); }
	 ruleSquareBrackets
{ after(grammarAccess.getSquareBracketsRule()); } 
	 EOF 
;

// Rule SquareBrackets
ruleSquareBrackets 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSquareBracketsAccess().getGroup()); }
		(rule__SquareBrackets__Group__0)
		{ after(grammarAccess.getSquareBracketsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodCallExpr
entryRuleMethodCallExpr
:
{ before(grammarAccess.getMethodCallExprRule()); }
	 ruleMethodCallExpr
{ after(grammarAccess.getMethodCallExprRule()); } 
	 EOF 
;

// Rule MethodCallExpr
ruleMethodCallExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodCallExprAccess().getAlternatives()); }
		(rule__MethodCallExpr__Alternatives)
		{ after(grammarAccess.getMethodCallExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodCall
entryRuleMethodCall
:
{ before(grammarAccess.getMethodCallRule()); }
	 ruleMethodCall
{ after(grammarAccess.getMethodCallRule()); } 
	 EOF 
;

// Rule MethodCall
ruleMethodCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodCallAccess().getGroup()); }
		(rule__MethodCall__Group__0)
		{ after(grammarAccess.getMethodCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberValue
entryRuleNumberValue
:
{ before(grammarAccess.getNumberValueRule()); }
	 ruleNumberValue
{ after(grammarAccess.getNumberValueRule()); } 
	 EOF 
;

// Rule NumberValue
ruleNumberValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberValueAccess().getValueAssignment()); }
		(rule__NumberValue__ValueAssignment)
		{ after(grammarAccess.getNumberValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getGroup_0()); }
		(rule__Type__Group_0__0)
		{ after(grammarAccess.getTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameAssignment_1()); }
		(rule__Type__TypeNameAssignment_1)
		{ after(grammarAccess.getTypeAccess().getTypeNameAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameAssignment_2()); }
		(rule__Type__TypeNameAssignment_2)
		{ after(grammarAccess.getTypeAccess().getTypeNameAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getClassDeclAssignment_3()); }
		(rule__Type__ClassDeclAssignment_3)
		{ after(grammarAccess.getTypeAccess().getClassDeclAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0()); }
		(rule__Statement__Group_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1()); }
		(rule__Statement__Group_1__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_2()); }
		(rule__Statement__Group_2__0)
		{ after(grammarAccess.getStatementAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_3()); }
		(rule__Statement__Group_3__0)
		{ after(grammarAccess.getStatementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_4()); }
		(rule__Statement__Group_4__0)
		{ after(grammarAccess.getStatementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_5()); }
		(rule__Statement__Group_5__0)
		{ after(grammarAccess.getStatementAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__ExpressionTypeAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getExpressionTypePlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getAdditionAccess().getExpressionTypePlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionAccess().getExpressionTypeHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getAdditionAccess().getExpressionTypeHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__ExpressionTypeAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getExpressionTypeAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultiplicationAccess().getExpressionTypeAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationAccess().getExpressionTypeAmpersandAmpersandKeyword_1_1_0_1()); }
		'&&'
		{ after(grammarAccess.getMultiplicationAccess().getExpressionTypeAmpersandAmpersandKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NegationOrPointExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationOrPointExpressionAccess().getNegationParserRuleCall_0()); }
		ruleNegation
		{ after(grammarAccess.getNegationOrPointExpressionAccess().getNegationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNegationOrPointExpressionAccess().getPointParserRuleCall_1()); }
		rulePoint
		{ after(grammarAccess.getNegationOrPointExpressionAccess().getPointParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_0()); }
		(rule__Primary__ExpressionTypeAssignment_0)
		{ after(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_1()); }
		(rule__Primary__ExpressionTypeAssignment_1)
		{ after(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_2()); }
		(rule__Primary__ExpressionTypeAssignment_2)
		{ after(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_4()); }
		(rule__Primary__Group_4__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_5()); }
		(rule__Primary__Group_5__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getVariableAssignment_6()); }
		(rule__Primary__VariableAssignment_6)
		{ after(grammarAccess.getPrimaryAccess().getVariableAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberAssignment_7()); }
		(rule__Primary__NumberAssignment_7)
		{ after(grammarAccess.getPrimaryAccess().getNumberAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCallExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCallExprAccess().getExpressionTypeAssignment_0()); }
		(rule__MethodCallExpr__ExpressionTypeAssignment_0)
		{ after(grammarAccess.getMethodCallExprAccess().getExpressionTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodCallExprAccess().getMethodCallAssignment_1()); }
		(rule__MethodCallExpr__MethodCallAssignment_1)
		{ after(grammarAccess.getMethodCallExprAccess().getMethodCallAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getClassDeclarationsAssignment_0()); }
	(rule__Program__ClassDeclarationsAssignment_0)
	{ after(grammarAccess.getProgramAccess().getClassDeclarationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getClassDeclarationsAssignment_1()); }
	(rule__Program__ClassDeclarationsAssignment_1)*
	{ after(grammarAccess.getProgramAccess().getClassDeclarationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainClass__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClass__Group__0__Impl
	rule__MainClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getMainClassAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClass__Group__1__Impl
	rule__MainClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassAccess().getNameAssignment_1()); }
	(rule__MainClass__NameAssignment_1)
	{ after(grammarAccess.getMainClassAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClass__Group__2__Impl
	rule__MainClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getMainClassAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClass__Group__3__Impl
	rule__MainClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassAccess().getMainMethodAssignment_3()); }
	(rule__MainClass__MainMethodAssignment_3)
	{ after(grammarAccess.getMainClassAccess().getMainMethodAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClass__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getMainClassAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainMethod__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__0__Impl
	rule__MainMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getPublicKeyword_0()); }
	'public'
	{ after(grammarAccess.getMainMethodAccess().getPublicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__1__Impl
	rule__MainMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getStaticKeyword_1()); }
	'static'
	{ after(grammarAccess.getMainMethodAccess().getStaticKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__2__Impl
	rule__MainMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getVoidKeyword_2()); }
	'void'
	{ after(grammarAccess.getMainMethodAccess().getVoidKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__3__Impl
	rule__MainMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getMainKeyword_3()); }
	'main'
	{ after(grammarAccess.getMainMethodAccess().getMainKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__4__Impl
	rule__MainMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getMainMethodAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__5__Impl
	rule__MainMethod__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getStringKeyword_5()); }
	'String'
	{ after(grammarAccess.getMainMethodAccess().getStringKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__6__Impl
	rule__MainMethod__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getLeftSquareBracketKeyword_6()); }
	'['
	{ after(grammarAccess.getMainMethodAccess().getLeftSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__7__Impl
	rule__MainMethod__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getRightSquareBracketKeyword_7()); }
	']'
	{ after(grammarAccess.getMainMethodAccess().getRightSquareBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__8__Impl
	rule__MainMethod__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getIDTerminalRuleCall_8()); }
	RULE_ID
	{ after(grammarAccess.getMainMethodAccess().getIDTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__9__Impl
	rule__MainMethod__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getMainMethodAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__10__Impl
	rule__MainMethod__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getLeftCurlyBracketKeyword_10()); }
	'{'
	{ after(grammarAccess.getMainMethodAccess().getLeftCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__11__Impl
	rule__MainMethod__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getStatementAssignment_11()); }
	(rule__MainMethod__StatementAssignment_11)
	{ after(grammarAccess.getMainMethodAccess().getStatementAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainMethod__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainMethodAccess().getRightCurlyBracketKeyword_12()); }
	'}'
	{ after(grammarAccess.getMainMethodAccess().getRightCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getClassDeclarationAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__1__Impl
	rule__ClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getNameAssignment_1()); }
	(rule__ClassDeclaration__NameAssignment_1)
	{ after(grammarAccess.getClassDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__2__Impl
	rule__ClassDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getGroup_2()); }
	(rule__ClassDeclaration__Group_2__0)?
	{ after(grammarAccess.getClassDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__3__Impl
	rule__ClassDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__4__Impl
	rule__ClassDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getVarDeclarationsAssignment_4()); }
	(rule__ClassDeclaration__VarDeclarationsAssignment_4)*
	{ after(grammarAccess.getClassDeclarationAccess().getVarDeclarationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__5__Impl
	rule__ClassDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getMethodDeclarationsAssignment_5()); }
	(rule__ClassDeclaration__MethodDeclarationsAssignment_5)*
	{ after(grammarAccess.getClassDeclarationAccess().getMethodDeclarationsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group_2__0__Impl
	rule__ClassDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getClassDeclarationAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getExtendedClassAssignment_2_1()); }
	(rule__ClassDeclaration__ExtendedClassAssignment_2_1)
	{ after(grammarAccess.getClassDeclarationAccess().getExtendedClassAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__0__Impl
	rule__Type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getIntKeyword_0_0()); }
	'int'
	{ after(grammarAccess.getTypeAccess().getIntKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__1__Impl
	rule__Type__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getTypeNameAssignment_0_1()); }
	(rule__Type__TypeNameAssignment_0_1)
	{ after(grammarAccess.getTypeAccess().getTypeNameAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_0_2()); }
	']'
	{ after(grammarAccess.getTypeAccess().getRightSquareBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__0__Impl
	rule__VarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getVariableAssignment_0()); }
	(rule__VarDeclaration__VariableAssignment_0)
	{ after(grammarAccess.getVarDeclarationAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVariableTypeAssignment_0()); }
	(rule__Variable__VariableTypeAssignment_0)
	{ after(grammarAccess.getVariableAccess().getVariableTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__0__Impl
	rule__MethodDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getPublicKeyword_0()); }
	'public'
	{ after(grammarAccess.getMethodDeclarationAccess().getPublicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__1__Impl
	rule__MethodDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getMethodTypeAssignment_1()); }
	(rule__MethodDeclaration__MethodTypeAssignment_1)
	{ after(grammarAccess.getMethodDeclarationAccess().getMethodTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__2__Impl
	rule__MethodDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getNameAssignment_2()); }
	(rule__MethodDeclaration__NameAssignment_2)
	{ after(grammarAccess.getMethodDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__3__Impl
	rule__MethodDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__4__Impl
	rule__MethodDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getGroup_4()); }
	(rule__MethodDeclaration__Group_4__0)?
	{ after(grammarAccess.getMethodDeclarationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__5__Impl
	rule__MethodDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__6__Impl
	rule__MethodDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getMethodDeclarationAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__7__Impl
	rule__MethodDeclaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getLocalVarDeclarationsAssignment_7()); }
	(rule__MethodDeclaration__LocalVarDeclarationsAssignment_7)*
	{ after(grammarAccess.getMethodDeclarationAccess().getLocalVarDeclarationsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__8__Impl
	rule__MethodDeclaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getStatementsAssignment_8()); }
	(rule__MethodDeclaration__StatementsAssignment_8)*
	{ after(grammarAccess.getMethodDeclarationAccess().getStatementsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__9__Impl
	rule__MethodDeclaration__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getGroup_9()); }
	(rule__MethodDeclaration__Group_9__0)?
	{ after(grammarAccess.getMethodDeclarationAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getMethodDeclarationAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group_4__0__Impl
	rule__MethodDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getFormalVarDeclarationsAssignment_4_0()); }
	(rule__MethodDeclaration__FormalVarDeclarationsAssignment_4_0)
	{ after(grammarAccess.getMethodDeclarationAccess().getFormalVarDeclarationsAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getGroup_4_1()); }
	(rule__MethodDeclaration__Group_4_1__0)*
	{ after(grammarAccess.getMethodDeclarationAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group_4_1__0__Impl
	rule__MethodDeclaration__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getMethodDeclarationAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getFormalVarDeclarationsAssignment_4_1_1()); }
	(rule__MethodDeclaration__FormalVarDeclarationsAssignment_4_1_1)
	{ after(grammarAccess.getMethodDeclarationAccess().getFormalVarDeclarationsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group_9__0__Impl
	rule__MethodDeclaration__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getReturnKeyword_9_0()); }
	'return'
	{ after(grammarAccess.getMethodDeclarationAccess().getReturnKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group_9__1__Impl
	rule__MethodDeclaration__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getReturnExpressionAssignment_9_1()); }
	(rule__MethodDeclaration__ReturnExpressionAssignment_9_1)
	{ after(grammarAccess.getMethodDeclarationAccess().getReturnExpressionAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_9_2()); }
	';'
	{ after(grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementTypeAssignment_0_0()); }
	(rule__Statement__StatementTypeAssignment_0_0)
	{ after(grammarAccess.getStatementAccess().getStatementTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__1__Impl
	rule__Statement__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementsAssignment_0_1()); }
	(rule__Statement__StatementsAssignment_0_1)*
	{ after(grammarAccess.getStatementAccess().getStatementsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightCurlyBracketKeyword_0_2()); }
	'}'
	{ after(grammarAccess.getStatementAccess().getRightCurlyBracketKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementTypeAssignment_1_0()); }
	(rule__Statement__StatementTypeAssignment_1_0)
	{ after(grammarAccess.getStatementAccess().getStatementTypeAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__1__Impl
	rule__Statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__2__Impl
	rule__Statement__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getFirstExpressionAssignment_1_2()); }
	(rule__Statement__FirstExpressionAssignment_1_2)
	{ after(grammarAccess.getStatementAccess().getFirstExpressionAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__3__Impl
	rule__Statement__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__4__Impl
	rule__Statement__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementsAssignment_1_4()); }
	(rule__Statement__StatementsAssignment_1_4)
	{ after(grammarAccess.getStatementAccess().getStatementsAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__5__Impl
	rule__Statement__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getElseKeyword_1_5()); }
	'else'
	{ after(grammarAccess.getStatementAccess().getElseKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementsAssignment_1_6()); }
	(rule__Statement__StatementsAssignment_1_6)
	{ after(grammarAccess.getStatementAccess().getStatementsAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__0__Impl
	rule__Statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementTypeAssignment_2_0()); }
	(rule__Statement__StatementTypeAssignment_2_0)
	{ after(grammarAccess.getStatementAccess().getStatementTypeAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__1__Impl
	rule__Statement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__2__Impl
	rule__Statement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getFirstExpressionAssignment_2_2()); }
	(rule__Statement__FirstExpressionAssignment_2_2)
	{ after(grammarAccess.getStatementAccess().getFirstExpressionAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__3__Impl
	rule__Statement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementsAssignment_2_4()); }
	(rule__Statement__StatementsAssignment_2_4)
	{ after(grammarAccess.getStatementAccess().getStatementsAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__0__Impl
	rule__Statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementTypeAssignment_3_0()); }
	(rule__Statement__StatementTypeAssignment_3_0)
	{ after(grammarAccess.getStatementAccess().getStatementTypeAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__1__Impl
	rule__Statement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_3_1()); }
	'('
	{ after(grammarAccess.getStatementAccess().getLeftParenthesisKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__2__Impl
	rule__Statement__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getFirstExpressionAssignment_3_2()); }
	(rule__Statement__FirstExpressionAssignment_3_2)
	{ after(grammarAccess.getStatementAccess().getFirstExpressionAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__3__Impl
	rule__Statement__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getStatementAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_3_4()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__0__Impl
	rule__Statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getVariableAssignment_4_0()); }
	(rule__Statement__VariableAssignment_4_0)
	{ after(grammarAccess.getStatementAccess().getVariableAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__1__Impl
	rule__Statement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementTypeAssignment_4_1()); }
	(rule__Statement__StatementTypeAssignment_4_1)
	{ after(grammarAccess.getStatementAccess().getStatementTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__2__Impl
	rule__Statement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getFirstExpressionAssignment_4_2()); }
	(rule__Statement__FirstExpressionAssignment_4_2)
	{ after(grammarAccess.getStatementAccess().getFirstExpressionAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_4_3()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__0__Impl
	rule__Statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getVariableAssignment_5_0()); }
	(rule__Statement__VariableAssignment_5_0)
	{ after(grammarAccess.getStatementAccess().getVariableAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__1__Impl
	rule__Statement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getIsArrayElementAssignmentAssignment_5_1()); }
	(rule__Statement__IsArrayElementAssignmentAssignment_5_1)
	{ after(grammarAccess.getStatementAccess().getIsArrayElementAssignmentAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__2__Impl
	rule__Statement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getFirstExpressionAssignment_5_2()); }
	(rule__Statement__FirstExpressionAssignment_5_2)
	{ after(grammarAccess.getStatementAccess().getFirstExpressionAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__3__Impl
	rule__Statement__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getRightSquareBracketKeyword_5_3()); }
	']'
	{ after(grammarAccess.getStatementAccess().getRightSquareBracketKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__4__Impl
	rule__Statement__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementTypeAssignment_5_4()); }
	(rule__Statement__StatementTypeAssignment_5_4)
	{ after(grammarAccess.getStatementAccess().getStatementTypeAssignment_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__5__Impl
	rule__Statement__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSecondExpressionAssignment_5_5()); }
	(rule__Statement__SecondExpressionAssignment_5_5)
	{ after(grammarAccess.getStatementAccess().getSecondExpressionAssignment_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_5_6()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_5_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
	{ after(grammarAccess.getExpressionAccess().getAdditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionTypeAssignment_1_1()); }
	(rule__Expression__ExpressionTypeAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getExpressionTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
	(rule__Expression__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
	{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
	(rule__Addition__Group_1__0)*
	{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__1__Impl
	rule__Addition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getExpressionTypeAssignment_1_1()); }
	(rule__Addition__ExpressionTypeAssignment_1_1)
	{ after(grammarAccess.getAdditionAccess().getExpressionTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
	(rule__Addition__RightAssignment_1_2)
	{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getNegationOrPointExpressionParserRuleCall_0()); }
	ruleNegationOrPointExpression
	{ after(grammarAccess.getMultiplicationAccess().getNegationOrPointExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
	(rule__Multiplication__Group_1__0)*
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__1__Impl
	rule__Multiplication__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getExpressionTypeAssignment_1_1()); }
	(rule__Multiplication__ExpressionTypeAssignment_1_1)
	{ after(grammarAccess.getMultiplicationAccess().getExpressionTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
	(rule__Multiplication__RightAssignment_1_2)
	{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Negation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group__0__Impl
	rule__Negation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getExpressionTypeAssignment_0()); }
	(rule__Negation__ExpressionTypeAssignment_0)
	{ after(grammarAccess.getNegationAccess().getExpressionTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Negation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNegationAccess().getRightAssignment_1()); }
	(rule__Negation__RightAssignment_1)
	{ after(grammarAccess.getNegationAccess().getRightAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__0__Impl
	rule__Point__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getSquareBracketsParserRuleCall_0()); }
	ruleSquareBrackets
	{ after(grammarAccess.getPointAccess().getSquareBracketsParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getGroup_1()); }
	(rule__Point__Group_1__0)*
	{ after(grammarAccess.getPointAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Point__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_1__0__Impl
	rule__Point__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getPointLeftAction_1_0()); }
	()
	{ after(grammarAccess.getPointAccess().getPointLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_1__1__Impl
	rule__Point__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getExpressionTypeAssignment_1_1()); }
	(rule__Point__ExpressionTypeAssignment_1_1)
	{ after(grammarAccess.getPointAccess().getExpressionTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Point__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointAccess().getRightAssignment_1_2()); }
	(rule__Point__RightAssignment_1_2)
	{ after(grammarAccess.getPointAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SquareBrackets__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquareBrackets__Group__0__Impl
	rule__SquareBrackets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquareBracketsAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getSquareBracketsAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquareBrackets__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquareBracketsAccess().getGroup_1()); }
	(rule__SquareBrackets__Group_1__0)?
	{ after(grammarAccess.getSquareBracketsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SquareBrackets__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquareBrackets__Group_1__0__Impl
	rule__SquareBrackets__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquareBracketsAccess().getSquareBracketsLeftAction_1_0()); }
	()
	{ after(grammarAccess.getSquareBracketsAccess().getSquareBracketsLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquareBrackets__Group_1__1__Impl
	rule__SquareBrackets__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquareBracketsAccess().getExpressionTypeAssignment_1_1()); }
	(rule__SquareBrackets__ExpressionTypeAssignment_1_1)
	{ after(grammarAccess.getSquareBracketsAccess().getExpressionTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquareBrackets__Group_1__2__Impl
	rule__SquareBrackets__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquareBracketsAccess().getRightAssignment_1_2()); }
	(rule__SquareBrackets__RightAssignment_1_2)
	{ after(grammarAccess.getSquareBracketsAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SquareBrackets__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSquareBracketsAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getSquareBracketsAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_3_0()); }
	(rule__Primary__ExpressionTypeAssignment_3_0)
	{ after(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
	rule__Primary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getIntKeyword_3_1()); }
	'int'
	{ after(grammarAccess.getPrimaryAccess().getIntKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__2__Impl
	rule__Primary__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_3_2()); }
	'['
	{ after(grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__3__Impl
	rule__Primary__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_3_3()); }
	(rule__Primary__ExpressionAssignment_3_3)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_3_4()); }
	']'
	{ after(grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__0__Impl
	rule__Primary__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_4_0()); }
	(rule__Primary__ExpressionTypeAssignment_4_0)
	{ after(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__1__Impl
	rule__Primary__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getTypeAssignment_4_1()); }
	(rule__Primary__TypeAssignment_4_1)
	{ after(grammarAccess.getPrimaryAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__2__Impl
	rule__Primary__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_4_2()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_4_3()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__0__Impl
	rule__Primary__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_5_0()); }
	(rule__Primary__ExpressionTypeAssignment_5_0)
	{ after(grammarAccess.getPrimaryAccess().getExpressionTypeAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__1__Impl
	rule__Primary__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExpressionAssignment_5_1()); }
	(rule__Primary__ExpressionAssignment_5_1)
	{ after(grammarAccess.getPrimaryAccess().getExpressionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_5_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group__0__Impl
	rule__MethodCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getMethodAssignment_0()); }
	(rule__MethodCall__MethodAssignment_0)
	{ after(grammarAccess.getMethodCallAccess().getMethodAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group__1__Impl
	rule__MethodCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMethodCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group__2__Impl
	rule__MethodCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getGroup_2()); }
	(rule__MethodCall__Group_2__0)?
	{ after(grammarAccess.getMethodCallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group_2__0__Impl
	rule__MethodCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_2_0()); }
	(rule__MethodCall__ParametersAssignment_2_0)
	{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getGroup_2_1()); }
	(rule__MethodCall__Group_2_1__0)*
	{ after(grammarAccess.getMethodCallAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group_2_1__0__Impl
	rule__MethodCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getMethodCallAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_2_1_1()); }
	(rule__MethodCall__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__ClassDeclarationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getClassDeclarationsMainClassParserRuleCall_0_0()); }
		ruleMainClass
		{ after(grammarAccess.getProgramAccess().getClassDeclarationsMainClassParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ClassDeclarationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getClassDeclarationsClassDeclarationParserRuleCall_1_0()); }
		ruleClassDeclaration
		{ after(grammarAccess.getProgramAccess().getClassDeclarationsClassDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainClassAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMainClassAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClass__MainMethodAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainClassAccess().getMainMethodMainMethodParserRuleCall_3_0()); }
		ruleMainMethod
		{ after(grammarAccess.getMainClassAccess().getMainMethodMainMethodParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainMethod__StatementAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainMethodAccess().getStatementStatementParserRuleCall_11_0()); }
		ruleStatement
		{ after(grammarAccess.getMainMethodAccess().getStatementStatementParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClassDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ExtendedClassAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getExtendedClassClassDeclCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getClassDeclarationAccess().getExtendedClassClassDeclIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getClassDeclarationAccess().getExtendedClassClassDeclIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getClassDeclarationAccess().getExtendedClassClassDeclCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__VarDeclarationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getVarDeclarationsVarDeclarationParserRuleCall_4_0()); }
		ruleVarDeclaration
		{ after(grammarAccess.getClassDeclarationAccess().getVarDeclarationsVarDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__MethodDeclarationsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getMethodDeclarationsMethodDeclarationParserRuleCall_5_0()); }
		ruleMethodDeclaration
		{ after(grammarAccess.getClassDeclarationAccess().getMethodDeclarationsMethodDeclarationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeNameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameLeftSquareBracketKeyword_0_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getTypeNameLeftSquareBracketKeyword_0_1_0()); }
			'['
			{ after(grammarAccess.getTypeAccess().getTypeNameLeftSquareBracketKeyword_0_1_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getTypeNameLeftSquareBracketKeyword_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameIntKeyword_1_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getTypeNameIntKeyword_1_0()); }
			'int'
			{ after(grammarAccess.getTypeAccess().getTypeNameIntKeyword_1_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getTypeNameIntKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTypeNameBooleanKeyword_2_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getTypeNameBooleanKeyword_2_0()); }
			'boolean'
			{ after(grammarAccess.getTypeAccess().getTypeNameBooleanKeyword_2_0()); }
		)
		{ after(grammarAccess.getTypeAccess().getTypeNameBooleanKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__ClassDeclAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getClassDeclClassDeclCrossReference_3_0()); }
		(
			{ before(grammarAccess.getTypeAccess().getClassDeclClassDeclIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTypeAccess().getClassDeclClassDeclIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getTypeAccess().getClassDeclClassDeclCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getVariableVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getVarDeclarationAccess().getVariableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VariableTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getVariableTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getVariableAccess().getVariableTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__MethodTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getMethodTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getMethodDeclarationAccess().getMethodTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__FormalVarDeclarationsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getFormalVarDeclarationsVariableParserRuleCall_4_0_0()); }
		ruleVariable
		{ after(grammarAccess.getMethodDeclarationAccess().getFormalVarDeclarationsVariableParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__FormalVarDeclarationsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getFormalVarDeclarationsVariableParserRuleCall_4_1_1_0()); }
		ruleVariable
		{ after(grammarAccess.getMethodDeclarationAccess().getFormalVarDeclarationsVariableParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__LocalVarDeclarationsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getLocalVarDeclarationsVarDeclarationParserRuleCall_7_0()); }
		ruleVarDeclaration
		{ after(grammarAccess.getMethodDeclarationAccess().getLocalVarDeclarationsVarDeclarationParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__StatementsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getStatementsStatementParserRuleCall_8_0()); }
		ruleStatement
		{ after(grammarAccess.getMethodDeclarationAccess().getStatementsStatementParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__ReturnExpressionAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getReturnExpressionExpressionParserRuleCall_9_1_0()); }
		ruleExpression
		{ after(grammarAccess.getMethodDeclarationAccess().getReturnExpressionExpressionParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementTypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementTypeLeftCurlyBracketKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getStatementTypeLeftCurlyBracketKeyword_0_0_0()); }
			'{'
			{ after(grammarAccess.getStatementAccess().getStatementTypeLeftCurlyBracketKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getStatementTypeLeftCurlyBracketKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_0_1_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementTypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementTypeIfKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getStatementTypeIfKeyword_1_0_0()); }
			'if'
			{ after(grammarAccess.getStatementAccess().getStatementTypeIfKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getStatementTypeIfKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FirstExpressionAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementsAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_1_4_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementsAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_1_6_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementTypeAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementTypeWhileKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getStatementTypeWhileKeyword_2_0_0()); }
			'while'
			{ after(grammarAccess.getStatementAccess().getStatementTypeWhileKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getStatementTypeWhileKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FirstExpressionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_2_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_2_4_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementAccess().getStatementsStatementParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementTypeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementTypeSystemOutPrintlnKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getStatementTypeSystemOutPrintlnKeyword_3_0_0()); }
			'System.out.println'
			{ after(grammarAccess.getStatementAccess().getStatementTypeSystemOutPrintlnKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getStatementTypeSystemOutPrintlnKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FirstExpressionAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_3_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VariableAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getVariableVariableCrossReference_4_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getVariableVariableIDTerminalRuleCall_4_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatementAccess().getVariableVariableIDTerminalRuleCall_4_0_0_1()); }
		)
		{ after(grammarAccess.getStatementAccess().getVariableVariableCrossReference_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementTypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementTypeEqualsSignKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getStatementTypeEqualsSignKeyword_4_1_0()); }
			'='
			{ after(grammarAccess.getStatementAccess().getStatementTypeEqualsSignKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getStatementTypeEqualsSignKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FirstExpressionAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_4_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VariableAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getVariableVariableCrossReference_5_0_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getVariableVariableIDTerminalRuleCall_5_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStatementAccess().getVariableVariableIDTerminalRuleCall_5_0_0_1()); }
		)
		{ after(grammarAccess.getStatementAccess().getVariableVariableCrossReference_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IsArrayElementAssignmentAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIsArrayElementAssignmentLeftSquareBracketKeyword_5_1_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getIsArrayElementAssignmentLeftSquareBracketKeyword_5_1_0()); }
			'['
			{ after(grammarAccess.getStatementAccess().getIsArrayElementAssignmentLeftSquareBracketKeyword_5_1_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getIsArrayElementAssignmentLeftSquareBracketKeyword_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__FirstExpressionAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_5_2_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getFirstExpressionExpressionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StatementTypeAssignment_5_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStatementTypeEqualsSignKeyword_5_4_0()); }
		(
			{ before(grammarAccess.getStatementAccess().getStatementTypeEqualsSignKeyword_5_4_0()); }
			'='
			{ after(grammarAccess.getStatementAccess().getStatementTypeEqualsSignKeyword_5_4_0()); }
		)
		{ after(grammarAccess.getStatementAccess().getStatementTypeEqualsSignKeyword_5_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SecondExpressionAssignment_5_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSecondExpressionExpressionParserRuleCall_5_5_0()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getSecondExpressionExpressionParserRuleCall_5_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionTypeLessThanSignKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getExpressionAccess().getExpressionTypeLessThanSignKeyword_1_1_0()); }
			'<'
			{ after(grammarAccess.getExpressionAccess().getExpressionTypeLessThanSignKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getExpressionAccess().getExpressionTypeLessThanSignKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_2_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionAccess().getRightExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__ExpressionTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getExpressionTypeAlternatives_1_1_0()); }
		(rule__Addition__ExpressionTypeAlternatives_1_1_0)
		{ after(grammarAccess.getAdditionAccess().getExpressionTypeAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0()); }
		ruleMultiplication
		{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__ExpressionTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getExpressionTypeAlternatives_1_1_0()); }
		(rule__Multiplication__ExpressionTypeAlternatives_1_1_0)
		{ after(grammarAccess.getMultiplicationAccess().getExpressionTypeAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getRightNegationOrPointExpressionParserRuleCall_1_2_0()); }
		ruleNegationOrPointExpression
		{ after(grammarAccess.getMultiplicationAccess().getRightNegationOrPointExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__ExpressionTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getExpressionTypeExclamationMarkKeyword_0_0()); }
		(
			{ before(grammarAccess.getNegationAccess().getExpressionTypeExclamationMarkKeyword_0_0()); }
			'!'
			{ after(grammarAccess.getNegationAccess().getExpressionTypeExclamationMarkKeyword_0_0()); }
		)
		{ after(grammarAccess.getNegationAccess().getExpressionTypeExclamationMarkKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Negation__RightAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNegationAccess().getRightPointParserRuleCall_1_0()); }
		rulePoint
		{ after(grammarAccess.getNegationAccess().getRightPointParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__ExpressionTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getExpressionTypeFullStopKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getPointAccess().getExpressionTypeFullStopKeyword_1_1_0()); }
			'.'
			{ after(grammarAccess.getPointAccess().getExpressionTypeFullStopKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getPointAccess().getExpressionTypeFullStopKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Point__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointAccess().getRightMethodCallExprParserRuleCall_1_2_0()); }
		ruleMethodCallExpr
		{ after(grammarAccess.getPointAccess().getRightMethodCallExprParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__ExpressionTypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSquareBracketsAccess().getExpressionTypeLeftSquareBracketKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getSquareBracketsAccess().getExpressionTypeLeftSquareBracketKeyword_1_1_0()); }
			'['
			{ after(grammarAccess.getSquareBracketsAccess().getExpressionTypeLeftSquareBracketKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getSquareBracketsAccess().getExpressionTypeLeftSquareBracketKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SquareBrackets__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSquareBracketsAccess().getRightPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getSquareBracketsAccess().getRightPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionTypeTrueKeyword_0_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getExpressionTypeTrueKeyword_0_0()); }
			'true'
			{ after(grammarAccess.getPrimaryAccess().getExpressionTypeTrueKeyword_0_0()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getExpressionTypeTrueKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionTypeFalseKeyword_1_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getExpressionTypeFalseKeyword_1_0()); }
			'false'
			{ after(grammarAccess.getPrimaryAccess().getExpressionTypeFalseKeyword_1_0()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getExpressionTypeFalseKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionTypeThisKeyword_2_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getExpressionTypeThisKeyword_2_0()); }
			'this'
			{ after(grammarAccess.getPrimaryAccess().getExpressionTypeThisKeyword_2_0()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getExpressionTypeThisKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionTypeAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionTypeNewKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getExpressionTypeNewKeyword_3_0_0()); }
			'new'
			{ after(grammarAccess.getPrimaryAccess().getExpressionTypeNewKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getExpressionTypeNewKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_3_3_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionTypeAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionTypeNewKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getExpressionTypeNewKeyword_4_0_0()); }
			'new'
			{ after(grammarAccess.getPrimaryAccess().getExpressionTypeNewKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getExpressionTypeNewKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getTypeTypeParserRuleCall_4_1_0()); }
		ruleType
		{ after(grammarAccess.getPrimaryAccess().getTypeTypeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionTypeAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionTypeLeftParenthesisKeyword_5_0_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getExpressionTypeLeftParenthesisKeyword_5_0_0()); }
			'('
			{ after(grammarAccess.getPrimaryAccess().getExpressionTypeLeftParenthesisKeyword_5_0_0()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getExpressionTypeLeftParenthesisKeyword_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExpressionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_5_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryAccess().getExpressionExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__VariableAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getVariableVariableCrossReference_6_0()); }
		(
			{ before(grammarAccess.getPrimaryAccess().getVariableVariableIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryAccess().getVariableVariableIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getPrimaryAccess().getVariableVariableCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__NumberAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberNumberValueParserRuleCall_7_0()); }
		ruleNumberValue
		{ after(grammarAccess.getPrimaryAccess().getNumberNumberValueParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCallExpr__ExpressionTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCallExprAccess().getExpressionTypeLengthKeyword_0_0()); }
		(
			{ before(grammarAccess.getMethodCallExprAccess().getExpressionTypeLengthKeyword_0_0()); }
			'length'
			{ after(grammarAccess.getMethodCallExprAccess().getExpressionTypeLengthKeyword_0_0()); }
		)
		{ after(grammarAccess.getMethodCallExprAccess().getExpressionTypeLengthKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCallExpr__MethodCallAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCallExprAccess().getMethodCallMethodCallParserRuleCall_1_0()); }
		ruleMethodCall
		{ after(grammarAccess.getMethodCallExprAccess().getMethodCallMethodCallParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__MethodAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCallAccess().getMethodMethodCrossReference_0_0()); }
		(
			{ before(grammarAccess.getMethodCallAccess().getMethodMethodIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMethodCallAccess().getMethodMethodIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getMethodCallAccess().getMethodMethodCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberValueAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberValueAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
